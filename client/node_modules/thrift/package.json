{
  "name": "thrift",
  "description": "node.js bindings for the Apache Thrift RPC system",
  "homepage": "http://thrift.apache.org/",
  "repository": {
    "type": "svn",
    "url": "http://svn.apache.org/repos/asf/thrift/trunk/"
  },
  "version": "0.9.0",
  "author": {
    "name": "Apache Thrift Developers",
    "email": "dev@thrift.apache.org",
    "url": "http://thrift.apache.org"
  },
  "licenses": [
    {
      "type": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "bugs": {
    "url": "https://issues.apache.org/jira/browse/THRIFT"
  },
  "directories": {
    "lib": "./lib/thrift"
  },
  "main": "./lib/thrift",
  "engines": {
    "node": ">= 0.2.4"
  },
  "readme": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements. See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership. The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License. You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied. See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n\nNOTE: you must use the framed thrift transport, TFramedTransport in most\nimplementations, on the server side. Using a popular example, this is enabled\nby default in Cassandra 0.7 (but configuration must be changed in Cassandra\n0.6.x and earlier).\n\n## Install\n\n    npm install thrift \n\n## Thrift Compiler\n\nYou can compile nodejs sources by running the following:\n\n    thrift --gen js:node thrift_file\n\n## Cassandra Client Example:\n\nHere is a Cassandra example:\n\n    var thrift = require('thrift'),\n        Cassandra = require('./gen-nodejs/Cassandra')\n        ttypes = require('./gen-nodejs/cassandra_types');\n\n    var connection = thrift.createConnection(\"localhost\", 9160),\n        client = thrift.createClient(Cassandra, connection);\n\n    connection.on('error', function(err) {\n      console.error(err);\n    });\n\n    client.get_slice(\"Keyspace\", \"key\", new ttypes.ColumnParent({column_family: \"ExampleCF\"}), new ttypes.SlicePredicate({slice_range: new ttypes.SliceRange({start: '', finish: ''})}), ttypes.ConsistencyLevel.ONE, function(err, data) {\n      if (err) {\n        // handle err\n      } else {\n        // data == [ttypes.ColumnOrSuperColumn, ...]\n      }\n      connection.end();\n    });\n\n## Custom client and server example\n\nAn example based on the one shown on the Thrift front page is included in the examples/ folder.\n",
  "readmeFilename": "README.md",
  "_id": "thrift@0.9.0",
  "dist": {
    "shasum": "2158ad155bccc9f7d7aae3f51bb57a698f0acebb"
  },
  "_from": "thrift@",
  "_resolved": "https://registry.npmjs.org/thrift/-/thrift-0.9.0.tgz"
}
